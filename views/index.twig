<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat en temps réel</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Roboto', sans-serif;
            padding: 20px;
        }

        .chat-container {
            max-width: 800px;
            margin: 0 auto;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        .chat-box {
            max-height: 300px;  /* Réduit la hauteur pour ne pas avoir besoin de faire défiler toute la page */
            overflow-y: auto;
            margin-bottom: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            background-color: #f1f1f1;
        }

        .chat-box .message {
            margin-bottom: 15px;
            display: flex;
            align-items: center;
        }

        .message .profile-pic {
            border-radius: 50%;
            width: 40px;
            height: 40px;
            object-fit: cover;
            margin-right: 10px;
        }

        .message .content {
            padding: 10px 15px;
            border-radius: 15px;
            background-color: #e9ecef;
            max-width: 80%;
            word-wrap: break-word;
        }

        .message.current-user .content {
            background-color: #c8e6c9;
            margin-left: auto;
            text-align: right;
        }

        .message.other-user .content {
            background-color: #e3f2fd;
        }

        .input-group {
            display: flex;
            align-items: center;
            margin-top: 10px;
        }

        #messageInput {
            border-radius: 25px;
            border: 1px solid #ddd;
            padding: 15px;
            flex: 1;
        }

        #sendButton {
            border-radius: 25px;
            background-color: #007bff;
            color: white;
            border: none;
            padding: 15px 25px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        #sendButton:hover {
            background-color: #0056b3;
        }

        .header {
            margin-bottom: 20px;
            text-align: center;
        }

        .header img {
            width: 750px;
            height: 150px;
            border-radius: 0%;
        }

        .header h1 {
            font-weight: 700;
            font-size: 32px;
            color: #333;
        }

        .status {
            font-size: 1em;
            font-weight: bold;
            color: green;
        }

        .user-info {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 20px;
        }

        .user-info .username {
            font-size: 1.5em;
            font-weight: bold;
            color: #333;
            margin-left: 20px;
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <!-- Header with image and title -->
        <div class="header">
            <div class="user-info">
                <img src="images/esp.jpeg" alt="Image de profil" />
               
            </div>
        </div>

        <div id="chatbox" class="chat-box">
            <!-- Affichage des anciens messages -->
            {% for message in messages %}
                <div class="message {{ message.user == user ? 'current-user' : 'other-user' }}">
                    <div class="content">
                        <strong>{{ message.user }}:</strong> {{ message.content }}
                        <div class="message-time">{{ message.timestamp | date('H:i') }}</div>
                    </div>
                </div>
            {% endfor %}
        </div>

        <div class="input-group">
            <input type="text" id="messageInput" class="form-control" placeholder="Entrez un message..." />
            <button id="sendButton" class="btn btn-primary ml-2">Envoyer</button>
        </div>
    </div>

    <!-- Inclure Socket.io -->
    <script src="/socket.io/socket.io.js"></script>

    <script>
        const socket = io();

        // Demander à l'utilisateur son nom s'il n'est pas encore défini
        let user = localStorage.getItem('username');
        if (!user) {
            user = prompt("Entrez votre nom : ");
            localStorage.setItem('username', user);  // Enregistrer le nom dans le localStorage
        }

        // Fonction pour afficher un message dans le chat
        function displayMessage(message) {
            const chatbox = document.getElementById('chatbox');
            const messageElement = document.createElement('div');
            const isCurrentUser = message.user === user;

            messageElement.classList.add('message');
            messageElement.classList.add(isCurrentUser ? 'current-user' : 'other-user');

            messageElement.innerHTML = `
                <div class="content">
                    <strong>${message.user}:</strong> ${message.content}
                    <div class="message-time">${new Date(message.timestamp).toLocaleTimeString()}</div>
                </div>
            `;
            chatbox.appendChild(messageElement);
            chatbox.scrollTop = chatbox.scrollHeight;
        }

        // Écouter les messages reçus via WebSocket
        socket.on('receiveMessage', (message) => {
            displayMessage(message);
        });

        // Envoyer un message via WebSocket
        document.getElementById('sendButton').addEventListener('click', () => {
            const messageInput = document.getElementById('messageInput');
            const message = messageInput.value;

            if (message.trim()) {
                socket.emit('sendMessage', { user, message });

                messageInput.value = '';  // Réinitialiser l'input après l'envoi
            }
        });

        // Gérer l'appui sur "Entrée" pour envoyer un message
        document.getElementById('messageInput').addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                document.getElementById('sendButton').click();
            }
        });
    </script>
</body>
</html>
